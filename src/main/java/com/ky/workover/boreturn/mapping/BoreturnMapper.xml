<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ky.workover.boreturn.mapper.BoreturnMapper" >
  <resultMap id="BaseResultMap" type="com.ky.workover.boreturn.model.Boreturn" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="sum" property="sum" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="lq_time" property="lqTime" jdbcType="VARCHAR" />
    <result column="sp_id" property="spId" jdbcType="VARCHAR" />
    <result column="sp_time" property="spTime" jdbcType="VARCHAR" />
    <result column="gh_time" property="ghTime" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, sum, user_id, lq_time, sp_id, sp_time, gh_time, type, note
  </sql>
  <select id="findByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM boreturn WHERE order_id = #{value}
  </select>
  <select id="findByOrder" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT * FROM boreturn WHERE order_id LIKE '%${value}%'
  </select>
  <select id="findAll" resultMap="BaseResultMap">
    SELECT * FROM boreturn
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from boreturn
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from boreturn
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ky.workover.boreturn.model.Boreturn" >
    insert into boreturn (id, order_id, sum, 
      user_id, lq_time, sp_id, 
      sp_time, gh_time, type, 
      note)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{sum,jdbcType=INTEGER}, 
      #{userId,jdbcType=VARCHAR}, #{lqTime,jdbcType=VARCHAR}, #{spId,jdbcType=VARCHAR}, 
      #{spTime,jdbcType=VARCHAR}, #{ghTime,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ky.workover.boreturn.model.Boreturn" >
    insert into boreturn
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="sum != null" >
        sum,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="lqTime != null" >
        lq_time,
      </if>
      <if test="spId != null" >
        sp_id,
      </if>
      <if test="spTime != null" >
        sp_time,
      </if>
      <if test="ghTime != null" >
        gh_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="sum != null" >
        #{sum,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="lqTime != null" >
        #{lqTime,jdbcType=VARCHAR},
      </if>
      <if test="spId != null" >
        #{spId,jdbcType=VARCHAR},
      </if>
      <if test="spTime != null" >
        #{spTime,jdbcType=VARCHAR},
      </if>
      <if test="ghTime != null" >
        #{ghTime,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ky.workover.boreturn.model.Boreturn" >
    update boreturn
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="sum != null" >
        sum = #{sum,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="lqTime != null" >
        lq_time = #{lqTime,jdbcType=VARCHAR},
      </if>
      <if test="spId != null" >
        sp_id = #{spId,jdbcType=VARCHAR},
      </if>
      <if test="spTime != null" >
        sp_time = #{spTime,jdbcType=VARCHAR},
      </if>
      <if test="ghTime != null" >
        gh_time = #{ghTime,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ky.workover.boreturn.model.Boreturn" >
    update boreturn
    set order_id = #{orderId,jdbcType=VARCHAR},
      sum = #{sum,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      lq_time = #{lqTime,jdbcType=VARCHAR},
      sp_id = #{spId,jdbcType=VARCHAR},
      sp_time = #{spTime,jdbcType=VARCHAR},
      gh_time = #{ghTime,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>