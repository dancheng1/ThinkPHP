<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ky.workover.work.mapper.PersonWorkoverMapper" >
  <resultMap id="BaseResultMap" type="com.ky.workover.work.model.PersonWorkover" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="PERSONNO" property="personno" jdbcType="VARCHAR" />
    <result column="PERSONNAME" property="personname" jdbcType="VARCHAR" />
    <result column="CURRENTDATE" property="currentdate" jdbcType="VARCHAR" />
    <result column="STARTTIME" property="starttime" jdbcType="VARCHAR" />
    <result column="ENDTIME" property="endtime" jdbcType="VARCHAR" />
    <result column="LEHGTHTIME" property="lehgthtime" jdbcType="VARCHAR" />
    <result column="WORKCOST" property="workcost" jdbcType="VARCHAR" />
    <result column="TRAFFICCOST" property="trafficcost" jdbcType="VARCHAR" />
    <result column="MEALCOST" property="mealcost" jdbcType="VARCHAR" />
    <result column="SUNCOST" property="suncost" jdbcType="VARCHAR" />
    <result column="CREATTIME" property="creattime" jdbcType="VARCHAR" />
    <result column="CREATBY" property="creatby" jdbcType="VARCHAR" />
    <result column="UPDATETIME" property="updatetime" jdbcType="VARCHAR" />
    <result column="UPDATEBY" property="updateby" jdbcType="VARCHAR" />
    <result column="YEAR" property="year" jdbcType="VARCHAR" />
    <result column="MOUTH" property="mouth" jdbcType="VARCHAR" />
    <result column="ADUITSTATE" property="aduitstate" jdbcType="VARCHAR" />
    <result column="IssueState" property="issuestate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, PERSONNO, PERSONNAME, CURRENTDATE, STARTTIME, ENDTIME, LEHGTHTIME, WORKCOST, 
    TRAFFICCOST, MEALCOST, SUNCOST, CREATTIME, CREATBY, UPDATETIME, UPDATEBY, YEAR, MOUTH, 
    ADUITSTATE, IssueState
  </sql>
  <select id="findAll" resultMap="BaseResultMap">
    SELECT * FROM person_workover
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from person_workover
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from person_workover
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ky.workover.work.model.PersonWorkover" >
    insert into person_workover (PERSONNO, PERSONNAME,
      CURRENTDATE, STARTTIME, ENDTIME, 
      LEHGTHTIME, WORKCOST, TRAFFICCOST, 
      MEALCOST, SUNCOST, CREATTIME, 
      CREATBY, UPDATETIME, UPDATEBY, 
      YEAR, MOUTH, ADUITSTATE, 
      IssueState)
    values (#{personno,jdbcType=VARCHAR}, #{personname,jdbcType=VARCHAR},
      #{currentdate,jdbcType=VARCHAR}, #{starttime,jdbcType=VARCHAR}, #{endtime,jdbcType=VARCHAR}, 
      #{lehgthtime,jdbcType=VARCHAR}, #{workcost,jdbcType=VARCHAR}, #{trafficcost,jdbcType=VARCHAR}, 
      #{mealcost,jdbcType=VARCHAR}, #{suncost,jdbcType=VARCHAR}, #{creattime,jdbcType=VARCHAR}, 
      #{creatby,jdbcType=VARCHAR}, #{updatetime,jdbcType=VARCHAR}, #{updateby,jdbcType=VARCHAR}, 
      #{year,jdbcType=VARCHAR}, #{mouth,jdbcType=VARCHAR}, #{aduitstate,jdbcType=VARCHAR}, 
      #{issuestate,jdbcType=VARCHAR})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    INSERT INTO person_workover(
    personno, personname,
    currentdate, starttime, endtime,
    lehgthtime, workcost,
    trafficcost, mealcost,
    suncost, creattime,
    creatby, updatetime, updateby,
    year, mouth,aduitstate
    )VALUES
    <foreach collection="list" separator="," index="index" item="item">
      (
      #{item.personno,jdbcType=INTEGER}, #{item.personname,jdbcType=INTEGER},
      #{item.currentdate,jdbcType=INTEGER}, #{item.starttime,jdbcType=VARCHAR}, #{item.endtime,jdbcType=VARCHAR},
      #{item.lehgthtime,jdbcType=VARCHAR}, #{item.workcost,jdbcType=VARCHAR},
      #{item.trafficcost,jdbcType=VARCHAR}, #{item.mealcost,jdbcType=VARCHAR},
      #{item.suncost,jdbcType=VARCHAR}, #{item.creattime,jdbcType=VARCHAR},
      #{item.creatby,jdbcType=TIMESTAMP}, #{item.updatetime,jdbcType=VARCHAR}, #{item.updateby,jdbcType=VARCHAR},
      #{item.year,jdbcType=VARCHAR}, #{item.mouth,jdbcType=VARCHAR}, #{item.aduitstate,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.ky.workover.work.model.PersonWorkover" >
    insert into person_workover
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="personno != null" >
        PERSONNO,
      </if>
      <if test="personname != null" >
        PERSONNAME,
      </if>
      <if test="currentdate != null" >
        CURRENTDATE,
      </if>
      <if test="starttime != null" >
        STARTTIME,
      </if>
      <if test="endtime != null" >
        ENDTIME,
      </if>
      <if test="lehgthtime != null" >
        LEHGTHTIME,
      </if>
      <if test="workcost != null" >
        WORKCOST,
      </if>
      <if test="trafficcost != null" >
        TRAFFICCOST,
      </if>
      <if test="mealcost != null" >
        MEALCOST,
      </if>
      <if test="suncost != null" >
        SUNCOST,
      </if>
      <if test="creattime != null" >
        CREATTIME,
      </if>
      <if test="creatby != null" >
        CREATBY,
      </if>
      <if test="updatetime != null" >
        UPDATETIME,
      </if>
      <if test="updateby != null" >
        UPDATEBY,
      </if>
      <if test="year != null" >
        YEAR,
      </if>
      <if test="mouth != null" >
        MOUTH,
      </if>
      <if test="aduitstate != null" >
        ADUITSTATE,
      </if>
      <if test="issuestate != null" >
        IssueState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personno != null" >
        #{personno,jdbcType=VARCHAR},
      </if>
      <if test="personname != null" >
        #{personname,jdbcType=VARCHAR},
      </if>
      <if test="currentdate != null" >
        #{currentdate,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="lehgthtime != null" >
        #{lehgthtime,jdbcType=VARCHAR},
      </if>
      <if test="workcost != null" >
        #{workcost,jdbcType=VARCHAR},
      </if>
      <if test="trafficcost != null" >
        #{trafficcost,jdbcType=VARCHAR},
      </if>
      <if test="mealcost != null" >
        #{mealcost,jdbcType=VARCHAR},
      </if>
      <if test="suncost != null" >
        #{suncost,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null" >
        #{creattime,jdbcType=VARCHAR},
      </if>
      <if test="creatby != null" >
        #{creatby,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="updateby != null" >
        #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="mouth != null" >
        #{mouth,jdbcType=VARCHAR},
      </if>
      <if test="aduitstate != null" >
        #{aduitstate,jdbcType=VARCHAR},
      </if>
      <if test="issuestate != null" >
        #{issuestate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ky.workover.work.model.PersonWorkover" >
    update person_workover
    <set >
      <if test="personno != null" >
        PERSONNO = #{personno,jdbcType=VARCHAR},
      </if>
      <if test="personname != null" >
        PERSONNAME = #{personname,jdbcType=VARCHAR},
      </if>
      <if test="currentdate != null" >
        CURRENTDATE = #{currentdate,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        STARTTIME = #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null" >
        ENDTIME = #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="lehgthtime != null" >
        LEHGTHTIME = #{lehgthtime,jdbcType=VARCHAR},
      </if>
      <if test="workcost != null" >
        WORKCOST = #{workcost,jdbcType=VARCHAR},
      </if>
      <if test="trafficcost != null" >
        TRAFFICCOST = #{trafficcost,jdbcType=VARCHAR},
      </if>
      <if test="mealcost != null" >
        MEALCOST = #{mealcost,jdbcType=VARCHAR},
      </if>
      <if test="suncost != null" >
        SUNCOST = #{suncost,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null" >
        CREATTIME = #{creattime,jdbcType=VARCHAR},
      </if>
      <if test="creatby != null" >
        CREATBY = #{creatby,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        UPDATETIME = #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="updateby != null" >
        UPDATEBY = #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        YEAR = #{year,jdbcType=VARCHAR},
      </if>
      <if test="mouth != null" >
        MOUTH = #{mouth,jdbcType=VARCHAR},
      </if>
      <if test="aduitstate != null" >
        ADUITSTATE = #{aduitstate,jdbcType=VARCHAR},
      </if>
      <if test="issuestate != null" >
        IssueState = #{issuestate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ky.workover.work.model.PersonWorkover" >
    update person_workover
    set PERSONNO = #{personno,jdbcType=VARCHAR},
      PERSONNAME = #{personname,jdbcType=VARCHAR},
      CURRENTDATE = #{currentdate,jdbcType=VARCHAR},
      STARTTIME = #{starttime,jdbcType=VARCHAR},
      ENDTIME = #{endtime,jdbcType=VARCHAR},
      LEHGTHTIME = #{lehgthtime,jdbcType=VARCHAR},
      WORKCOST = #{workcost,jdbcType=VARCHAR},
      TRAFFICCOST = #{trafficcost,jdbcType=VARCHAR},
      MEALCOST = #{mealcost,jdbcType=VARCHAR},
      SUNCOST = #{suncost,jdbcType=VARCHAR},
      CREATTIME = #{creattime,jdbcType=VARCHAR},
      CREATBY = #{creatby,jdbcType=VARCHAR},
      UPDATETIME = #{updatetime,jdbcType=VARCHAR},
      UPDATEBY = #{updateby,jdbcType=VARCHAR},
      YEAR = #{year,jdbcType=VARCHAR},
      MOUTH = #{mouth,jdbcType=VARCHAR},
      ADUITSTATE = #{aduitstate,jdbcType=VARCHAR},
      IssueState = #{issuestate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="workAudit" parameterType="com.ky.workover.work.model.PersonWorkover">
    UPDATE person_workover
  SET ADUITSTATE = '已审核' WHERE id = #{id,jdbcType=INTEGER}
  </update>
</mapper>